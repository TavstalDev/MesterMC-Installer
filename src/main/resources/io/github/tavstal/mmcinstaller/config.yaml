# The language used in the UI and messages.
languages:
  - key: "eng"
    name: "English"
    localization: ""
  - key: "hun"
    name: "Hungarian"
    localization: "Magyar"
debug: false
project:
  # The name of the project.
  name: "${group}.mmcinstaller"
  # The version of the project.
  version: "${version}"
  # The author of the project.
  author: "${authors}"
download:
  # The URL to download the latest version of the file.
  link: "https://mestermc.b-cdn.net/MesterMC.jar"
  # Expected file name of the downloaded file.
  file_name: "MesterMC.jar"
  # The expected SHA-256 hash of the downloaded file for integrity verification.
  sha256: "1d5198df53ffe00b0e5b885f551da552e4544be32bb41c27ed04dccc800e0492"
install:
  # Default directory names for installation.
  default_dirs:
    start_menu: "MesterMC"
    appdata: "MesterMC"
  batch:
    file_name: "StartMesterMC.bat"
    content: |
      @echo off
      pushd "%dirPath%"
      start javaw -jar "%jarPath%"
      popd
      exit
  bash:
    file_name: "StartMesterMC.sh"
    content: |
      #!/bin/bash
      cd "%dirPath%" || { echo "Failed to change directory to %dirpath%."; exit 1; }
      java -jar "%jarPath%"
      exit 0
  zsh:
    file_name: "StartMesterMC.zsh"
    content: |
      #!/bin/zsh
      cd "%dirPath%" || { echo "Failed to change directory to %dirpath%."; exit 1; }
      java -jar "%jarPath%"
      exit 0
  exe:
    file_name: "MesterMC.exe"
    resource_path: "exe/MesterMC.exe"
    powershell: |
      $WshShell = New-Object -ComObject WScript.Shell
      $Shortcut = $WshShell.CreateShortcut("%shortcutPath%")
      $Shortcut.TargetPath = "%exePath%"
      $Shortcut.IconLocation = "%iconPath%"
      $Shortcut.Save()
  linux_desktop:
    file_name: "MesterMC.desktop"
    content: |
      [Desktop Entry]
      Name=MesterMC
      Comment=A modified Minecraft client
      Exec=java -jar "%jarPath%"
      Icon=%dirPath%/icon.png
      Path=%dirPath%
      Terminal=false
      Type=Application
      Categories=Game;
      Keywords=Minecraft;MesterMC;Launcher;Game;
      StartupNotify=true
  macos_app:
    file_name: "MesterMC.app"
    info_list: |
      <?xml version="1.0" encoding="UTF-8"?>
      <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
      <plist version="1.0">
        <dict>
          <key>CFBundleExecutable</key>
          <string>execute.sh</string>
          <key>CFBundleIconFile</key>
          <string>%iconPath%</string> 
          <key>CFBundleIdentifier</key>
          <string>com.mestermc.launcher</string>
          <key>CFBundleName</key>
          <string>MesterMC</string>
          <key>CFBundlePackageType</key>
          <string>APPL</string>
          <key>CFBundleShortVersionString</key>
          <string>1.0.0</string>
          <key>CFBundleVersion</key>
          <string>1.0.0</string>
          <key>LSMinimumSystemVersion</key>
          <string>10.9.0</string>
          <key>NSHighResolutionCapable</key>
          <true/>
          <key>NSPrincipalClass</key>
          <string>NSApplication</string>
          <key>LSApplicationCategoryType</key>
          <string>public.app-category.games</string>
        </dict>
      </plist>
    script: |
      #!/bin/zsh
      cd "%dirPath%" || { echo "Failed to change directory to %dirpath%."; exit 1; }
      java -jar "%jarPath%"
      exit 0
uninstall:
  batch:
    file_name: "Uninstall.bat"
    content: |
      @echo off
      echo Uninstalling MesterMC...

      :: --- Remove desktop shortcut if it exists ---
      if exist "%desktopShortcut%" (
          echo Removing desktop shortcut: "%desktopShortcut%"
          del /F /Q "%desktopShortcut%"
      ) else (
          echo Desktop shortcut not found: "%desktopShortcut%"
      )

      :: --- Remove Start Menu shortcut if it exists ---
      if exist "%startmenuShortcut%" (
          echo Removing Start Menu shortcut: "%startmenuShortcut%"
          del /F /Q "%startmenuShortcut%"
      ) else (
          echo Start Menu shortcut not found: "%startmenuShortcut%"
      )

      :: --- Prepare for self-deletion and directory removal ---
      :: Copy the current script to a temporary location
      set "tempScript=%TEMP%\_mmc_uninstall_temp.bat"
      copy "%~f0" "%tempScript%" > nul

      :: Create a command that the temporary script will execute
      :: This command waits a few seconds, then deletes the installation directory,
      :: and finally deletes the temporary uninstall script itself.
      echo @echo off > "%tempScript%"
      echo ping 127.0.0.1 -n 5 > nul >> "%tempScript%" :: Wait 5 seconds for current script to exit
      echo echo Deleting installation directory: "%installDir%" >> "%tempScript%"
      echo rmdir /s /q "%installDir%" >> "%tempScript%"
      echo echo Uninstallation complete. >> "%tempScript%"
      echo echo Deleting temporary uninstaller... >> "%tempScript%"
      echo del /F /Q "%tempScript%" >> "%tempScript%"

      :: Start the temporary script in the background and exit the current one
      :: This allows the original script's directory to be deleted.
      start "" cmd /c "%tempScript%"
      exit
  bash:
    file_name: "Uninstall.sh"
    content: |
      #!/bin/bash      
      INSTALL_DIR="%installDir%"
      DESKTOP_SHORTCUT="%desktopShortcut%"
      STARTMENU_SHORTCUT="%startmenuShortcut%"
        
      echo "Uninstalling MesterMC..."
        
      # --- Remove desktop shortcut if it exists ---
      if [ -f "$DESKTOP_SHORTCUT" ]; then
        echo "Removing desktop shortcut: \"$DESKTOP_SHORTCUT\""
        rm -f "$DESKTOP_SHORTCUT"
      else
        echo "Desktop shortcut not found: \"$DESKTOP_SHORTCUT\""
      fi
        
      # --- Remove Start Menu shortcut if it exists ---
      if [ -f "$STARTMENU_SHORTCUT" ]; then
        echo "Removing Start Menu shortcut: \"$STARTMENU_SHORTCUT\""
        rm -f "$STARTMENU_SHORTCUT"
      else
        echo "Start Menu shortcut not found: \"$STARTMENU_SHORTCUT\""
      fi
        
      # --- Prepare for self-deletion and directory removal ---
      echo "Preparing for directory removal and self-deletion..."
      TEMP_SCRIPT="/tmp/mmc_uninstall_temp.sh" # Using /tmp for temporary script
        
      # Create a temporary script that will delete the installation directory and itself
      cat << EOF > "$TEMP_SCRIPT"
        #!/bin/bash
        sleep 3 # Wait a few seconds for the current script to exit
        echo "Deleting installation directory: \\"$INSTALL_DIR\\""
        rm -rf "$INSTALL_DIR"
        echo "Uninstallation complete."
        echo "Deleting temporary uninstaller..."
        rm -f "$TEMP_SCRIPT"
      EOF
        
      chmod +x "$TEMP_SCRIPT" # Make the temporary script executable
        
      # Execute the temporary script in the background and exit the current one.
      # nohup ensures the script continues running even if the terminal is closed.
      # > /dev/null 2>&1 redirects stdout and stderr to null, keeping the terminal clean.
      nohup "$TEMP_SCRIPT" > /dev/null 2>&1 &
      exit 0
  zsh:
    file_name: "Uninstall.app"
    content: |
      #!/bin/zsh
      INSTALL_DIR="%installDir%"
      DESKTOP_SHORTCUT="%desktopShortcut%"
      STARTMENU_SHORTCUT="%startmenuShortcut%"
        
      echo "Uninstalling MesterMC..."
        
      # --- Remove desktop shortcut if it exists ---
      if [ -e "$DESKTOP_SHORTCUT" ]; then
        echo "Removing desktop shortcut: \"$DESKTOP_SHORTCUT\""
        rm -rf "$DESKTOP_SHORTCUT"
      else
        echo "Desktop shortcut not found: \"$DESKTOP_SHORTCUT\""
      fi
        
      # --- Remove Start Menu shortcut if it exists ---
      if [ -e "$STARTMENU_SHORTCUT" ]; then
        echo "Removing Start Menu shortcut: \"$STARTMENU_SHORTCUT\""
        rm -rf "$STARTMENU_SHORTCUT"
      else
        echo "Start Menu shortcut not found: \"$STARTMENU_SHORTCUT\""
      fi
        
      # --- Prepare for self-deletion and directory removal ---
      echo "Preparing for directory removal and self-deletion..."
      TEMP_SCRIPT="/tmp/mmc_uninstall_temp.zsh" # Using /tmp for temporary script
        
      # Create a temporary script that will delete the installation directory and itself
      cat << EOF > "$TEMP_SCRIPT"
        #!/bin/zsh
        sleep 3 # Wait a few seconds for the current script to exit
        echo "Deleting installation directory: \\"$INSTALL_DIR\\""
        rm -rf "$INSTALL_DIR"
        echo "Uninstallation complete."
        echo "Deleting temporary uninstaller..."
        rm -f "$TEMP_SCRIPT"
      EOF
        
      chmod +x "$TEMP_SCRIPT" # Make the temporary script executable
        
      # Execute the temporary script in the background and exit the current one.
      # nohup ensures the script continues running even if the terminal is closed.
      # > /dev/null 2>&1 redirects stdout and stderr to null, keeping the terminal clean.
      nohup "$TEMP_SCRIPT" > /dev/null 2>&1 &
      exit 0


uninstaller: |
  # DO NOT DELETE THIS FILE IF MESTERMC IS INSTALLED
  # This file is used by the uninstaller to remove MesterMC from the system.
  installDir: "%installDir%"
  startMenuDir: "%startMenuDir%"
  desktopShortcut: "%desktopShortcut%"
  startMenuShortcut: "%startMenuShortcut%"